package threading;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class ThreadPoolExample {
	
	public static void main(String args[]) {
		ExecutorService executor = Executors.newFixedThreadPool(5);
		
		for(int i = 0; i < 10; i++) {
			Runnable worker = new WorkerThread(String.valueOf(i));
			executor.execute(worker);
		}
		executor.shutdown();
		while(executor.isTerminated()) {
			System.out.println("Finished All Threads");
		}
	}
	
}

class WorkerThread implements Runnable {

	private String message;
	
	public WorkerThread(String message) {
		this.message = message;
	}
	
	@Override
	public void run() {
		System.out.println(Thread.currentThread().getName() + " (Start) " + message);
		processMessage();
		System.out.println(Thread.currentThread().getName() + " (End) " + message);
	}
	
	private void processMessage() {
		try {
			Thread.sleep(5000);
		} catch(InterruptedException ex) {
			ex.printStackTrace();
		}
	}
	
}